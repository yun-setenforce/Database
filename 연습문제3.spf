<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>College</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>1735343714820231817</string>
			<key>name</key>
			<string>root@127.0.0.1</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>admin3</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGoCwwXGBkaHiVVJG51bGzTDQ4PEBMWV05TLmtleXNaTlMu
			b2JqZWN0c1YkY2xhc3OiERKAAoADohQVgASABYAHVHR5cGVUcm93
			c18QHVNlbGVjdGlvbkRldGFpbFR5cGVOU0luZGV4U2V00hsPHB1c
			TlNSYW5nZUNvdW50EACABtIfICEiWiRjbGFzc25hbWVYJGNsYXNz
			ZXNaTlNJbmRleFNldKIjJFpOU0luZGV4U2V0WE5TT2JqZWN00h8g
			JidcTlNEaWN0aW9uYXJ5oiYkAAgAEQAaACQAKQAyADcASQBMAFEA
			UwBcAGIAaQBxAHwAgwCGAIgAigCNAI8AkQCTAJgAnQC9AMIAzwDR
			ANMA2ADjAOwA9wD6AQUBDgETASAAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {695, 477}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>#날짜 : 2023/06/22
#이름 : 정채윤
#내용 : SQL 연습문제 3

#실습 3-1
CREATE DATABASE `College`;
CREATE USER 'admin3'@'%' IDENTIFIED BY '1234';
GRANT ALL PRIVILEGES ON College.* TO 'admin3'@'%';
FLUSH PRIVILEGES;

#실습 3-2

CREATE TABLE `Student`(
	`stdNo` CHAR(8) PRIMARY KEY,
	`stdName` VARCHAR(20) NOT NULL,
	`stdHp` CHAR(13) NOT NULL UNIQUE,
	`stdYear` INT NOT NULL,
	`stdAddress` VARCHAR(100)
);

CREATE TABLE `Lecture`(
	`lecNo`	INT		PRIMARY KEY,
	`lecName`	VARCHAR(20)	NOT NULL,
	`lecCredit`	INT	NOT NULL,
	`lecTime`	INT	NOT NULL,
	`lecClass`	VARCHAR(10) DEFAULT NULL
);

CREATE TABLE `Register`(
	`regStdNo`	CHAR(8) NOT NULL,
	`regLecNo`	INT	NOT NULL,
	`regMidScore`	INT	DEFAULT NULL,
	`regFinalScore`	INT DEFAULT NULL,
	`regTotalScore`	INT DEFAULT NULL,
	`regGrade`	CHAR(1)	DEFAULT NULL
);


#실습 3-3
INSERT INTO `Student`(`stdNo`, `stdName`, `stdHp`,`stdYear`) VALUES('20201016',	'김유신',	'010-1234-1001',3);
INSERT INTO `Student`VALUES('20201126',	'김춘추',	'010-1234-1002',3, '경상남도 경주시');
INSERT INTO `Student`VALUES('20210216',	'장보고',	'010-1234-1003',2, '전라남도 완도시');
INSERT INTO `Student`VALUES('20210326',	'강감찬',	'010-1234-1004',2, '서울시 영등포구');
INSERT INTO `Student`VALUES('20220416',	'이순신',	'010-1234-1005',1, '부산시 부산진구');
INSERT INTO `Student`VALUES('20220521',	'송상현',	'010-1234-1006',1, '부산시 동래구');


INSERT INTO `Lecture` VALUES(159,	'인지행동심리학',	3,	40,	'본304');
INSERT INTO `Lecture` VALUES(167,	'운영체제론',	3,	25,	'본805');
INSERT INTO `Lecture` VALUES(234,	'중급 영문법',	3,	20,	'본201');
INSERT INTO `Lecture` VALUES(239,	'세법개론',	3,	40,	'본204');
INSERT INTO `Lecture` VALUES(248,	'빅데이터 개론',	3,	20,	'본801');
INSERT INTO `Lecture` VALUES(253,	'컴퓨터 사고와 코딩',	2,	10,	'본802');
INSERT INTO `Lecture` VALUES(349,	'사회복지 마케팅',	2,	50,	'본301');



INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20201126',	234);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20201016',	248);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20201016',	253);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20201126',	239);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20210216',	349);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20210326',	349);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20201016',	167);
INSERT INTO `Register`(`regStdNo`, `regLecNo`) VALUES('20220416',	349);

#실습 3-4
SELECT * FROM `Lecture`;

#실습 3-5
SELECT * FROM `Student`;

#실습 3-6
SELECT * FROM `Register`;

#실습 3-7
SELECT * FROM `Student` WHERE `stdYear`=3;

#실습 3-8
SELECT * FROM `Lecture` WHERE `lecCredit`=2;

#실습 3-9
UPDATE `Register` SET `regMidScore` = 36, `regFinalScore`= 42 
WHERE `regStdNo`='20201126' AND `regLecNo`=234;
UPDATE `Register` SET `regMidScore` = 24, `regFinalScore`= 62 
WHERE `regStdNo`='20201016' AND `regLecNo`=248;
UPDATE `Register` SET `regMidScore` = 28, `regFinalScore`= 40 
WHERE `regStdNo`='20201016' AND `regLecNo`=253;
UPDATE `Register` SET `regMidScore` = 37, `regFinalScore`= 57 
WHERE `regStdNo`='20201126' AND `regLecNo`=239;
UPDATE `Register` SET `regMidScore` = 28, `regFinalScore`= 68 
WHERE `regStdNo`='20210216' AND `regLecNo`=349;
UPDATE `Register` SET `regMidScore` = 16, `regFinalScore`= 65 
WHERE `regStdNo`='20210326' AND `regLecNo`=349;
UPDATE `Register` SET `regMidScore` = 18, `regFinalScore`= 38 
WHERE `regStdNo`='20201016' AND `regLecNo`=167;
UPDATE `Register` SET `regMidScore` = 25, `regFinalScore`= 58 
WHERE `regStdNo`='20220416' AND `regLecNo`=349;

SELECT * FROM `Register`;

#실습 3-10
UPDATE `Register` 
SET 
	`regTotalScore`=`regMidScore`+`regFinalScore`,
	`regGrade`	=	if(`regTotalScore` &gt;= 90, 'A',
					if(`regTotalScore` &gt;= 80, 'B',
					if(`regTotalScore` &gt;= 70, 'C',
					if(`regTotalScore` &gt;= 60, 'D', 'F'))));

#실습 3-11
SELECT * FROM `Register` ORDER BY `regTotalScore` DESC, `regMidScore` DESC;

#실습 3-12
SELECT * FROM `Register` WHERE `regLecNo`=349 ORDER BY `regTotalScore` DESC;

#실습 3-13
SELECT * FROM `Lecture` WHERE `lecTime` &gt;= 40;

#실습 3-14
SELECT `lecName`, `lecClass` FROM `Lecture`;

#실습 3-15
SELECT `stdNo`, `stdName` FROM `Student`;

#실습 3-16
SELECT * FROM `Student` WHERE `stdAddress` IS NULL;

#실습 3-17
SELECT * FROM `Student` WHERE `stdAddress` LIKE '부산시 %';

#실습 3-18
SELECT * FROM `Student` AS a 
LEFT JOIN `Register` AS b
ON a.`stdNo` = b.`regStdNo`;

#실습 3-19
SELECT
	a.`stdNo`,
	a.`stdName`,
	b.`regLecNo`,
	b.`regMidScore`,
	b.`regFinalScore`,
	b.`regTotalScore`,
	b.`regGrade`
FROM `Student` AS a,
	`Register` AS b
WHERE a.`stdNo`= b.`regStdNo`
ORDER BY `stdNo`;

#실습 3-20
SELECT `stdName`, `stdNo`, `regLecNo`
FROM `Student` AS a
JOIN `Register` AS b 
ON a.`stdNo`=b.`regStdNo`
WHERE `regLecNo`=349;

#실습 3-21
SELECT 
	`stdNo`,
	`stdName`,
	COUNT(`stdNo`) AS `수강신청 건수`,
	SUM(`regTotalScore`) AS `종합점수`,
	SUM(`regTotalScore`) / COUNT(`stdNo`) AS `평균`
FROM `Student` AS a
JOIN `Register` AS b
ON a.`stdNo` = b.`regStdNo`
GROUP BY `stdNo`
ORDER BY `stdNo`;

#실습 3-22
SELECT * FROM `Register` AS a
JOIN `Lecture` AS b
ON a.`regLecNo`=b.`lecNo`;

#실습 3-23
SELECT
	`regStdNo`,
	`regLecNo`,
	`lecName`,
	`regMidScore`,
	`regFinalScore`,
	`regTotalScore`,
	`regGrade`
FROM `Register` AS a
JOIN `Lecture` AS b
ON a.`regLecNo` = b.`lecNo`;

#실습 3-24
SELECT
	COUNT(*) AS `사회복지 마케팅 수강 신청건수`,
	AVG(`regTotalScore`) AS `사회복지 마케팅 평균`
FROM `Register` AS a JOIN `Lecture` AS b ON a.`regLecNo`=b.`lecNo`
WHERE `lecName`='사회복지 마케팅';

#실습 3-25
SELECT `regStdNo`, `lecName`
FROM `Register` AS a JOIN `Lecture` AS b ON a.`regLecNo`=b.`lecNo`
WHERE `regGrade`='A';

#실습 3-26
SELECT * FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `stdNo`;

#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regGrade`, `regFinalScore` DESC;

#실습 3-28
SELECT `stdNo`, `stdName`, `lecName`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE `regGrade`='F';

#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`
ORDER BY `stdNo`;

#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName`, null)) AS `이수과목`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`;</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName`, null)) AS `이수과목`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`</string>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName`, null)) AS `이수과목`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`
ORDER BY `lecNo`</string>
		<string>#실습 3-28
SELECT `stdNo`, `stdName`, `lecName`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE `regGrade`='F'</string>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName, null`)) AS `이수과목`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`</string>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName, null`)) AS `이수과목`
`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`;</string>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName, null`)) AS `이수과목`
`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F');</string>
		<string>#실습 3-30
SELECT `stdNo`, `stdName`, GROUP_CONCAT(`lecName`) AS `신청과목`, GROUP_CONCAT(if(`regTotalScore`&gt;=60, `lecName, null`)) AS `이수과목`
`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')</string>
		<string>#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`
ORDER BY `stdNo`</string>
		<string>#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')
GROUP BY `stdNo`</string>
		<string>#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade` IN('F')</string>
		<string>#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE NOT `regGrade`='F'</string>
		<string>#실습 3-29
SELECT `stdNo`, `stdName`, SUM(`lecCredit`) AS `이수학점`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
WHERE `regGrade` !='F'</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regGrade`, `regFinalScore` DESC</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regGrade`, `stdNo` DESC</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regGrade`, `stdNo`</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regGrade`</string>
		<string>Gra</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `regTotalScore` DESC</string>
		<string>#실습 3-27
SELECT 
	`stdNo`, `stdName`, `lecNo`, `lecName`, `regMidScore`, `regFinalScore`, `regTotalScore`, `regGrade`
FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo</string>
		<string>#실습 3-26
SELECT * FROM `Student` AS a
JOIN `Register` AS b ON a.stdNo = b.regStdNo
JOIN `Lecture` AS c ON b.regLecNo=c.lecNo
ORDER BY `stdNo`</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.33</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
