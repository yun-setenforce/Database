<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>testdb</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>7326407723935257999</string>
			<key>name</key>
			<string>root@127.0.0.1</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGtCwwZGhscHSEoLDA0OFUkbnVsbNMNDg8QFBhXTlMua2V5
			c1pOUy5vYmplY3RzViRjbGFzc6MREhOAAoADgASjFRYXgAWABoAI
			gAxUdHlwZVRyb3dzVGtleXNfECZTZWxlY3Rpb25EZXRhaWxUeXBl
			UHJpbWFyeUtleWVkRGV0YWlsc9MNDg8eHyCgoIAH0iIjJCVaJGNs
			YXNzbmFtZVgkY2xhc3Nlc18QE05TTXV0YWJsZURpY3Rpb25hcnmj
			JCYnXE5TRGljdGlvbmFyeVhOU09iamVjdNIODykroSqACYAL0g8t
			Li9ZTlMuc3RyaW5ngApTdWlk0iIjMTJfEA9OU011dGFibGVTdHJp
			bmejMTMnWE5TU3RyaW5n0iIjNTZeTlNNdXRhYmxlQXJyYXmjNTcn
			V05TQXJyYXnSIiMmOaImJwAIABEAGgAkACkAMgA3AEkATABRAFMA
			YQBnAG4AdgCBAIgAjACOAJAAkgCWAJgAmgCcAJ4AowCoAK0A1gDd
			AN4A3wDhAOYA8QD6ARABFAEhASoBLwExATMBNQE6AUQBRgFKAU8B
			YQFlAW4BcwGCAYYBjgGTAAAAAAAAAgEAAAAAAAAAOgAAAAAAAAAA
			AAAAAAAAAZY=
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {687, 922}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string># 날짜 : 2023/06/16
# 이름 : 정채윤
# 내용 : 4. 데이터베이스 고급

USE `TestDB`;
#실습 4-1
CREATE TABLE `Member` (
		`uid` VARCHAR(10) PRIMARY KEY,
		`name` VARCHAR(10) NOT NULL,
        `hp` CHAR(13) NOT NULL,
        `pos` VARCHAR(10) NOT NULL DEFAULT '사원',
        `dep` INT,
        `rdate` DATETIME NOT NULL
	);
    
CREATE TABLE `Department` (
		`depNo` INT PRIMARY KEY,
        `name` VARCHAR(10) NOT NULL,
        `tel` CHAR(12) NOT NULL
);

CREATE TABLE `Sales` (
		`seq` INT AUTO_INCREMENT PRIMARY KEY,
		`uid` VARCHAR(10) NOT NULL,
        `year` YEAR NOT NULL,
        `month` INT NOT NULL,
        `sale` INT NOT NULL
);

#실습 4-2
INSERT INTO `Member` VALUES('a101','박혁거세','010-1234-1001','부장',101,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a102','김유신','010-1234-1002','차장',101,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a103','김춘추','010-1234-1003','사원',101,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a104','장보고','010-1234-1004','대리',102,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a105','강감찬','010-1234-1005','과장',102,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a106','이성계','010-1234-1006','차장',103,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a107','정철','010-1234-1007','차장',103,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a108','이순신','010-1234-1008','부장',104,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a109','허균','010-1234-1009','부장',104,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a110','정약용','010-1234-1010','사원',105,'2020-11-19 11:39:48');
INSERT INTO `Member` VALUES('a111','박지원','010-1234-1011','사원',105,'2020-11-19 11:39:48');

SELECT * FROM `Member`;

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a101','2018',1,98100);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2018',1,136000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a103','2018',1,80100);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a104','2018',1,78000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a105','2018',1,93000);

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a101','2018',2,23500);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2018',2,126000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a103','2018',2,18500);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a105','2018',2,19000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a106','2018',2,53000);

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a101','2019',1,24000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2019',1,109000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a103','2019',1,101000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a104','2019',1,53500);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a107','2019',1,24000);

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2019',2,160000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a103','2019',2,101000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a104','2019',2,43000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a105','2019',2,24000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a106','2019',2,109000);

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2020',1,201000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a104','2020',1,63000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a105','2020',1,74000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a106','2020',1,122000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a107','2020',1,111000);

INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a102','2020',2,120000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a103','2020',2,93000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a104','2020',2,84000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a105','2020',2,180000);
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) VALUES('a108','2020',2,76000);

SELECT * FROM `Sales`;

INSERT INTO `Department` VALUES(101,'영업1부','051-512-1001');
INSERT INTO `Department` VALUES(102,'영업2부','051-512-1002');
INSERT INTO `Department` VALUES(103,'영업3부','051-512-1003');
INSERT INTO `Department` VALUES(104,'영업4부','051-512-1004');
INSERT INTO `Department` VALUES(105,'영업5부','051-512-1005');
INSERT INTO `Department` VALUES(106,'영업지원부','051-512-1006');
INSERT INTO `Department` VALUES(107,'인사부','051-512-1007');

SELECT * FROM `Department`;

#실습 4-3
SELECT * FROM `Member` WHERE `name`='김유신';
SELECT * FROM `Member` WHERE `pos`='차장' AND `dep`=101;
SELECT * FROM `Member` WHERE `pos`='차장' OR `dep`=101;
SELECT * FROM `Member` WHERE `name` !='김춘추';
SELECT * FROM `Member` WHERE `name` &lt;&gt;'김춘추';
SELECT * FROM `Member` WHERE `pos`='사원' OR `pos`='대리';
SELECT * FROM `Member` WHERE `pos` IN('사원','대리');
SELECT * FROM `Member` WHERE `dep` IN(101,102,103);
SELECT * FROM `Member` WHERE `name` LIKE '%신';
SELECT * FROM `Member` WHERE `name` LIKE '김%';	# % : 검색
SELECT * FROM `Member` WHERE `name` LIKE '김__';	# _ : 글자수 맞춘 검색
SELECT * FROM `Member` WHERE `name` LIKE '_성_';
SELECT * FROM `Member` WHERE `name` LIKE '정_';

SELECT * FROM `Sales` WHERE `sale`&gt;50000;
SELECT * FROM `Sales` WHERE `sale` &gt;= 50000 AND `sale` &lt; 100000 AND `month`=1;
SELECT * FROM `Sales` WHERE `sale` BETWEEN 50000 AND 100000;
SELECT * FROM `Sales` WHERE `sale` NOT BETWEEN 50000 AND 100000;
SELECT * FROM `Sales` WHERE `year` IN(2020);
SELECT * FROM `Sales` WHERE `month` IN(1,2);

#실습 4-4
SELECT * FROM `Sales` ORDER BY `sale`; #기본은 ASC
SELECT * FROM `Sales` ORDER BY `sale` ASC;
SELECT * FROM `Sales` ORDER BY `sale` DESC;
SELECT * FROM `Member` ORDER BY `name`;
SELECT * FROM `Member` ORDER BY `name` DESC;
SELECT * FROM `Member` ORDER BY `rdate` ASC;
SELECT * FROM `Sales` WHERE `sale` &gt; 50000 ORDER BY `sale` DESC;
SELECT * FROM `Sales` 
			WHERE `sㄱale` &gt; 50000
            ORDER BY 
            		`year`,
					`month`, 
					`sale` DESC;

#실습 4-5

SELECT * FROM `Sales` LIMIT 3;
SELECT * FROM `Sales` LIMIT 0,3; # start, length
SELECT * FROM `Sales` LIMIT 1,2;
SELECT * FROM `Sales` LIMIT 5,3;
SELECT * FROM `Sales` ORDER BY `sale` DESC LIMIT 3,5;
SELECT * FROM `Sales` WHERE `sale` &lt; 50000
					ORDER BY `sale` DESC LIMIT 3;
SELECT * 
FROM `Sales` 
WHERE 
	`sale` &gt; 50000
ORDER BY 
	`year` DESC, 
	`month`,
	`sale` DESC
LIMIT 
	5;
			
#실습 4-6

SELECT SUM(`sale`) AS `합계` FROM `Sales`;
SELECT AVG(`sale`) AS `평균` FROM `Sales`;
SELECT MAX(`sale`) AS `최대값` FROM `Sales`;
SELECT MIN(`sale`) AS `최소값` FROM `Sales`;
SELECT COUNT(`sale`) AS `갯수` FROM `Sales`;
SELECT COUNT(*) AS `갯수` FROM `Sales`;

SELECT SUBSTRING(`hp`,10,4) AS `전화번호 끝자리` FROM `Member`;

INSERT INTO `Member` VALUES('b101','을지문덕','010-5555-1234','사장',107,NOW()); #NOW() : 현재 날짜, 시간을 입력하는 함수 


#실습 4-7
SELECT 
	SUM(`sale`) AS `2018년 1월 매출의 총합` 
FROM 
	`Sales`
WHERE 
	`year`='2018' 
	AND
 	`month`=1;

#실습 4-8
SELECT 
	SUM(`sale`) AS `2019년 2월 - 5만원 이상 매출 총합`, 
	AVG(`sale`) AS `평균`
FROM 
	`Sales` 
WHERE
	`year`='2019' 
	AND `month`=2 
	AND `sale`&gt;50000;
	
#실습 4-9
SELECT MIN(`sale`) AS `2020년 전체 매출의 최저`, MAX(`sale`) AS `최고` 
			FROM `Sales` 
			WHERE `year`='2020';

#실습 4-10
###################
SELECT VERSION();
SELECT * FROM `Sales` GROUP BY `uid`;
###################
SELECT `uid` FROM `Sales` GROUP BY `uid`;
SELECT `year` FROM `Sales` GROUP BY `year`;
SELECT `uid`,`year` FROM `Sales` GROUP BY `uid`,`year`;
SELECT `uid`, COUNT(*) AS `건수` FROM `Sales` GROUP BY `uid`;
SELECT `uid`, SUM(sale) AS `합계` FROM `Sales` GROUP BY `uid`;
SELECT `uid`, AVG(sale) AS `평균` FROM `Sales` GROUP BY `uid`;

SELECT `uid`, COUNT(*) AS `건수`, SUM(sale) AS `합계`, AVG(sale) AS `평균` FROM `Sales` GROUP BY `uid`;

SELECT `uid`, `year`, SUM(`sale`) AS `합계`
FROM 
	`Sales`
GROUP BY 
	`uid`, `year`;
						
SELECT 
	`uid`, `year`,SUM(`sale`) AS `합계`
FROM 
	`Sales`
GROUP BY 
	`uid`,	`year`
ORDER BY 
	`year` ASC, `합계` DESC;
						
SELECT
	`uid`, 
	`year`, 
	SUM(`sale`) AS `합계`
FROM
	`Sales`
WHERE 
	`sale`&gt;= 50000
GROUP BY 
	`uid`,`year`
ORDER BY 
	`합계` DESC;
						

#실습 4-11 

SELECT `uid`, SUM(sale) AS `합계` 
FROM 
	`Sales`
GROUP BY 
	`uid` 
HAVING 
	`합계`&gt;= 200000;
				
SELECT `uid`, `year`, SUM(`sale`) AS `합계`
FROM 
	`Sales`
WHERE 
	`sale` &gt;= 100000
GROUP BY 
	`uid`, `year`
HAVING 
	`합계`&gt;= 200000
ORDER BY 
	`합계` DESC;

#실습 4-12
CREATE TABLE `Sales2` LIKE `Sales`;
INSERT INTO `Sales2` SELECT * FROM `Sales`;
UPDATE `Sales2` SET `year`=`year`+3;


SELECT * FROM `Sales` UNION SELECT * FROM `Sales2`;

(SELECT * FROM `Sales`) 
UNION
(SELECT * FROM `Sales2`);

SELECT `uid`, `year`, `sale` FROM `Sales`
UNION
SELECT `uid`, `year`, `sale` FROM `Sales2`;

SELECT `uid`,`year`,SUM(`sale`) AS `합계` 
FROM `Sales` 
GROUP BY `uid`, `year`;
SELECT `uid`,`year`,SUM(`sale`) AS `합계` 
FROM `Sales2` 
GROUP BY `uid`, `year`;

SELECT `uid`,`year`,SUM(`sale`) AS `합계` 
FROM `Sales` 
GROUP BY `uid`, `year`
	UNION
SELECT `uid`,`year`,SUM(`sale`) AS `합계` 
FROM `Sales2` 
GROUP BY `uid`, `year`
	ORDER BY `year` ASC, `합계` DESC;
    
#실습 4-13
SELECt * FROM `Sales`;
SELECT * FROM `Member`;
#INNER JOIN에서 INNER는 일반적으로 생략
#FROM절에 들어가는 테이블이 기준이 된다면
SELECT * FROM `Sales` 
INNER JOIN `Member` 
ON `Sales`.uid = `Member`.uid; 

SELECT * FROM `Member`
INNER JOIN `Department` 
on `Member`.dep = `Department`.depNo;


SELECT * FROM `Sales` AS a 
JOIN `Member` AS b 
ON a.uid = b.uid;

SELECT * FROM `Member` AS a 
JOIN `Department` AS b 
ON a.dep = b.depNo;


SELECT * FROM `Sales` AS a, `Member` AS b 
WHERE a.uid = b.uid;

SELECT * FROM `Member` AS a, `Department` AS b 
WHERE a.dep = b.depNo;


SELECT 
	a.`seq`, 
	a.`uid`, 
	a.`sale`, 
	b.`name`, 
	b.`pos` 
FROM `Sales` AS a
JOIN `Member` AS b 
ON a.`uid`= b.`uid`;

#조건 column명이 똑같을 때
SELECT 
	`seq`,
	a.`uid`, 
	`sale`, 
	`name`, 
	`pos` 
FROM `Sales` AS a
JOIN `Member` AS b 
USING (`uid`);
            
            
SELECT 
	a.`seq`, 
	a.`uid`, 
	`sale`,
	`name`,
	`pos` 
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `sale` &gt;= 100000;

#######################			
SELECT 
	a.`seq`, 
	a.`uid`, 
	b.`name`, 
	b.`pos`, 
	`year`, 
	SUM(`sale`) AS `합계` 
FROM `Sales` AS a
JOIN `Member` AS b 
ON a.`uid`=b.`uid`
GROUP BY a.`uid`, a.`year` 
HAVING `합계` &gt;= 100000
ORDER BY a.`year` ASC, `합계` DESC;
  #######################
 
SELECT * 
FROM `Sales` 		AS a
JOIN `Member` 		AS b ON a.uid = b.uid
JOIN `Department` 	AS c ON b.dep = c.depNo;

SELECT a.`seq`, a.`uid`, a.`sale`, b.`name`, b.`pos`, c.`name` 
FROM `Sales` AS a
JOIN `Member` AS b ON a.uid = b.uid
JOIN `Department` AS c ON b.dep = c.depNo;

SELECT a.`seq`, a.`uid`, a.`sale`, b.`name`, b.`pos`, c.`name` 
FROM `Sales` 		AS a
JOIN `Member` 		AS b on a.uid = b.uid
JOIN `Department`	AS c on b.dep = c.depNo
WHERE `sale` &gt; 100000
ORDER BY `sale` DESC;
        



#실습 4-14
##외부조인
INSERT INTO `Sales`(`uid`,`year`,`month`,`sale`) 
	VALUES('p101',2018,1,35000);

SELECT * FROM `Sales` AS a 
LEFT JOIN `Member` AS b ON a.uid = b.uid;

SELECT * FROM `Sales` AS a 
RIGHT JOIN `Member` AS b ON a.uid = b.uid;

SELECT a.`seq`, a.`uid`, `sale`, `name`, `pos` 
FROM `Sales` 		AS a 
LEFT JOIN `Member`	AS b USING(uid);

#실습 4-15
SELECT 
	a.`uid`, 
	a.`name`, 
	a.`pos`, 
	b.`name` 
FROM `Member` AS a
JOIN `Department` AS b
ON a.dep=b.depNo;

#실습 4-16
SELECT SUM(`sale`) AS `2019년도 매출의 합` 
FROM `Sales`
WHERE `year`=2019 AND `uid`=(SELECT `uid` FROM `Member` WHERE `name`='김유신')
GROUP BY `year`;
			
SELECT *
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `name`='김유신';

SELECT 
	SUM(`sale`) AS `매출합`
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `year`=2019 AND b.`name`='김유신' 
GROUP BY `year`;

#실습 4-17
SELECT  
	a.`uid`,  
	b.`name`  AS `직원이름`, 
	c.`name` AS `부서명`, 
	b.`pos` AS `직급`,
	a.`year` AS `년도`, 
	SUM(a.`sale`) AS `매출 합`
FROM `Sales` 		AS a  
JOIN `Member` 		AS b ON a.`uid`= b.`uid`
JOIN `Department` 	AS c ON b.`dep` = c.`depNo`
WHERE a.`year`= 2019 AND a.`sale` &gt;= 50000
GROUP BY a.`uid` 
HAVING `매출 합` &gt;= 100000
ORDER BY `매출 합` DESC;
			


					
</string>
			<key>table</key>
			<string>Member</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>#실습 4-17
SELECT  
	a.`uid`,  
	b.`name`  AS `직원이름`, 
	c.`name` AS `부서명`, 
	b.`pos` AS `직급`,
	a.`year` AS `년도`, 
	SUM(a.`sale`) AS `매출 합`
FROM `Sales` 		AS a  
JOIN `Member` 		AS b ON a.`uid`= b.`uid`
JOIN `Department` 	AS c ON b.`dep` = c.`depNo`
WHERE a.`year`= 2019 AND a.`sale` &gt;= 50000
GROUP BY a.`uid` 
HAVING `매출 합` &gt;= 100000
ORDER BY `매출 합` DESC</string>
		<string>#실습 4-17
SELECT  
	a.`uid`,  
	b.`name`  AS `직원이름`, 
	c.`name` AS `부서명`, 
	b.`pos` AS `직급`,
	a.`year` AS `년도`, 
	SUM(a.`sale`) AS `매출 합`
FROM `Sales` 		AS a  
JOIN `Member` 		AS b ON a.`uid`= b.`uid`
JOIN `Department` 	AS c ON b.`dep` = c.`depNo`
WHERE a.`year`= 2019 AND a.`sale` &gt;= 50000
GROUP BY a.`uid` 
HAVING `매출 합` &gt;= 100000</string>
		<string>SELECT 
	SUM(`sale`) AS `매출합`
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `year`=2019 AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT SUM(`sale`) AS `매출합`
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `year`=2019 AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `year`=2019 AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>#실습 4-16
SELECT SUM(`sale`) AS `2019년도 매출의 합` 
FROM `Sales`
WHERE `year`=2019 AND `uid`=(SELECT `uid` FROM `Member` WHERE `name`='김유신')
GROUP BY `year`</string>
		<string>SELECT *
FROM `Sales` AS a
JOIN `Member` AS b
ON a.`uid`=b.`uid`
WHERE `name`='김유신'</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE `year`=2019 AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>#실습 4-16
SELECT SUM(`sale`) AS `2019년도 매출의 합` 
FROM `Sales`
WHERE `year`='2019' AND `uid`=(SELECT `uid` FROM `Member` WHERE `name`='김유신')
GROUP BY `year`</string>
		<string>`year`=2019 AND</string>
		<string>SELECT `year`, SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE b.`name`='김유신' 
GROUP BY `year`</string>
		<string>#실습 4-16
SELECT SUM(`sale`) AS `2019년도 매출의 합` 
FROM `Sales`
WHERE `year`='2019' AND `uid`=(SELECT `uid` FROM `Member` WHERE `name`='김유신')
GROUP BY a.`year`</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE  AND b.`name`='김유신' 
GROUP BY a.`year`</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE  AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT `year`,SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE  AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT a.`year`,SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE  AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT a.year,SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE  AND b.`name`='김유신' 
GROUP BY `year`</string>
		<string>SELECT SUM(`sale`) AS `2019년도 매출의 합`
FROM `Sales` AS a
JOIN `Member` AS b
WHERE b.`name`='김유신'
GROUP BY `year`</string>
		<string>#실습 4-15
SELECT 
	a.`uid`, 
	a.`name`, 
	a.`pos`, 
	b.`name` 
FROM `Member` AS a
JOIN `Department` AS b
ON a.dep=b.depNo</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.33</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
